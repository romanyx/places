// Automatically generated by MockGen. DO NOT EDIT!
// Source: service.go

package search

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	place "github.com/romanyx/places/internal/place"
)

// Mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *_MockRepositoryRecorder
}

// Recorder for MockRepository (not exported)
type _MockRepositoryRecorder struct {
	mock *MockRepository
}

func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &_MockRepositoryRecorder{mock}
	return mock
}

func (_m *MockRepository) EXPECT() *_MockRepositoryRecorder {
	return _m.recorder
}

func (_m *MockRepository) Cache(_param0 context.Context, _param1 Params, _param2 []place.Model) error {
	ret := _m.ctrl.Call(_m, "Cache", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRepositoryRecorder) Cache(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Cache", arg0, arg1, arg2)
}

func (_m *MockRepository) Retrieve(_param0 context.Context, _param1 Params) ([]place.Model, error) {
	ret := _m.ctrl.Call(_m, "Retrieve", _param0, _param1)
	ret0, _ := ret[0].([]place.Model)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRepositoryRecorder) Retrieve(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Retrieve", arg0, arg1)
}

// Mock of Requester interface
type MockRequester struct {
	ctrl     *gomock.Controller
	recorder *_MockRequesterRecorder
}

// Recorder for MockRequester (not exported)
type _MockRequesterRecorder struct {
	mock *MockRequester
}

func NewMockRequester(ctrl *gomock.Controller) *MockRequester {
	mock := &MockRequester{ctrl: ctrl}
	mock.recorder = &_MockRequesterRecorder{mock}
	return mock
}

func (_m *MockRequester) EXPECT() *_MockRequesterRecorder {
	return _m.recorder
}

func (_m *MockRequester) Request(_param0 context.Context, _param1 Params) ([]place.Model, error) {
	ret := _m.ctrl.Call(_m, "Request", _param0, _param1)
	ret0, _ := ret[0].([]place.Model)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRequesterRecorder) Request(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Request", arg0, arg1)
}
